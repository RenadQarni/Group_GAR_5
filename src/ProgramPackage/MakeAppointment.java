package ProgramPackage;

import java.awt.Color;
import java.io.*;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author renad
 */
public class MakeAppointment extends javax.swing.JFrame {

    
    static File file;
    static PrintWriter p;
    static FileWriter f;
    static ArrayList<String> a = new ArrayList<>();

    /**
     * Creates new form VeterinaryClinic
     */
    public MakeAppointment() throws FileNotFoundException {
        initComponents();
        
        file = new File("AppointmentInfo.txt");
        p = new PrintWriter(file);
        
        // init services
        Service.services.add( new Service("Health Care", 100, true));
        Service.services.add( new Service("Beauty Cut", 150, true));
        Service.services.add( new Service("Insects Control", 80, true));
        Service.services.add( new Service("Training", 250, true));
    }

    static void file() throws IOException {
        //f = null;
        try {
            f = new FileWriter(file);
        } catch (IOException ex) {
            Logger.getLogger(MakeAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
        p = new PrintWriter(f);
        p.print(a);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        MakeAppointmentPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        servicesLable = new javax.swing.JLabel();
        HCbox = new javax.swing.JCheckBox();
        BCbox = new javax.swing.JCheckBox();
        ICbox = new javax.swing.JCheckBox();
        appDateLabel = new javax.swing.JLabel();
        TtrainBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        npPet = new javax.swing.JSpinner();
        nextStepBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        timeBox = new javax.swing.JComboBox<>();
        appTimeLabel = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        appoDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        MakeAppointmentPanel.setBackground(new java.awt.Color(255, 255, 255));
        MakeAppointmentPanel.setPreferredSize(new java.awt.Dimension(690, 460));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Make Appointment");

        servicesLable.setText("Choose Services :");

        HCbox.setText("Health Care");

        BCbox.setText("Beauty Cut");
        BCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCboxActionPerformed(evt);
            }
        });

        ICbox.setText("Insects Control");

        appDateLabel.setText("Choose Appointment Date :");

        TtrainBox.setText("Training");

        jLabel4.setText("How many pets?");

        npPet.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        npPet.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                noPet(evt);
            }
        });

        nextStepBtn.setText("Next Step");
        nextStepBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveAppoinmentInfo(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/back.png"))); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(100, 100));
        jButton2.setMinimumSize(new java.awt.Dimension(50, 50));

        timeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "    :     AM/PM", "08:00 AM", "09:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "01:00 PM", "02:00 PM", "03:00 PM", "04:00 PM" }));

        appTimeLabel.setText("Choose Appointment Time :");

        javax.swing.GroupLayout MakeAppointmentPanelLayout = new javax.swing.GroupLayout(MakeAppointmentPanel);
        MakeAppointmentPanel.setLayout(MakeAppointmentPanelLayout);
        MakeAppointmentPanelLayout.setHorizontalGroup(
            MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179)
                        .addComponent(jLabel1))
                    .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(32, 32, 32)
                                .addComponent(npPet, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(servicesLable)
                            .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(HCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ICbox)
                                .addGap(18, 18, 18)
                                .addComponent(TtrainBox, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                                    .addComponent(appDateLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(appoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MakeAppointmentPanelLayout.createSequentialGroup()
                                    .addComponent(appTimeLabel)
                                    .addGap(21, 21, 21)
                                    .addComponent(timeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(44, 44, 44)))))
                    .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(nextStepBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MakeAppointmentPanelLayout.setVerticalGroup(
            MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(npPet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(servicesLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HCbox)
                    .addComponent(BCbox)
                    .addComponent(ICbox)
                    .addComponent(TtrainBox))
                .addGap(37, 37, 37)
                .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MakeAppointmentPanelLayout.createSequentialGroup()
                        .addComponent(appDateLabel)
                        .addGap(29, 29, 29)
                        .addGroup(MakeAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(appTimeLabel)
                            .addComponent(timeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextStepBtn))
                    .addComponent(appoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MakeAppointmentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MakeAppointmentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BCboxActionPerformed

    private void noPet(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_noPet
        String spinner = "catch Value";
        Integer myint = (Integer) npPet.getValue();
        spinner = myint.toString();
        a.add(spinner);
    }//GEN-LAST:event_noPet

    // --------- Check if user fill in all the requirements ---------
    private boolean checkAppoinmentInfo() {
        servicesLable.setForeground(Color.black);
        appDateLabel.setForeground(Color.black);
        appTimeLabel.setForeground(Color.black);
        errorLabel.setText(" ");

        boolean validInfo = true;

        if (validInfo == true) {

            if (!HCbox.isSelected() && !BCbox.isSelected() && !ICbox.isSelected() && !TtrainBox.isSelected()) {
                servicesLable.setForeground(Color.red);
                errorLabel.setText("Please fill in all the requirements to confirm the appointment");
                errorLabel.setForeground(Color.red);
                validInfo = false;
            }

            if (appoDateChooser.getDate() == null) {
                appDateLabel.setForeground(Color.red);
                errorLabel.setText("Please fill in all the requirements to confirm the appointment");
                errorLabel.setForeground(Color.red);
                validInfo = false;
            }

            if (timeBox.getSelectedIndex() == 0) {
                appTimeLabel.setForeground(Color.red);
                errorLabel.setText("Please fill in all the requirements to confirm the appointment");
                errorLabel.setForeground(Color.red);
                validInfo = false;
            }
        }

        return validInfo;
    }
    
    private void saveAppoinmentInfo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveAppoinmentInfo
        if (checkAppoinmentInfo() == true) {
            
            Appointment a = new Appointment();
            a.setNoPet( (int) npPet.getValue());
            a.setDate(appoDateChooser.getDate());
            a.setTime(timeBox.getItemAt( timeBox.getSelectedIndex() ));
            
            if(HCbox.isSelected())
                a.addService( Service.services.get(0) );
            if(BCbox.isSelected())
                a.addService( Service.services.get(1) );
            if(ICbox.isSelected())
                a.addService( Service.services.get(2) );
            if(TtrainBox.isSelected())
                a.addService( Service.services.get(3) );
            
            p.print(a);
            
            ConfirmAppointment X = new ConfirmAppointment();
            X.setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_saveAppoinmentInfo

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MakeAppointment().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(MakeAppointment.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox BCbox;
    private javax.swing.JCheckBox HCbox;
    private javax.swing.JCheckBox ICbox;
    private javax.swing.JPanel MakeAppointmentPanel;
    private javax.swing.JCheckBox TtrainBox;
    private javax.swing.JLabel appDateLabel;
    private javax.swing.JLabel appTimeLabel;
    private com.toedter.calendar.JDateChooser appoDateChooser;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton nextStepBtn;
    private javax.swing.JSpinner npPet;
    private javax.swing.JLabel servicesLable;
    private javax.swing.JComboBox<String> timeBox;
    // End of variables declaration//GEN-END:variables
}
